{"version":3,"sources":["redux/auth/auth-operations.js","components/AuthNav/AuthNav.module.css","components/Navigation/Navigation.module.css","redux/contacts/contacts-operations.js","components/UserMenu/UserMenu.module.css","components/Container/Container.js","redux/contacts/contacts-slicer.js","components/Container/Container.module.css","components/AppBar/AppBar.module.css","redux/auth/auth-selectors.js","components/UserMenu/UserMenu.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/auth/auth-slicer.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","toast","success","error","message","logIn","logOut","_","fetchCurrentUser","getState","state","persistedToken","auth","get","module","exports","fetchContacts","addContacts","contact","deleteContacts","contactId","delete","Container","children","className","s","container","contactsSlice","createSlice","name","initialState","items","filter","reducers","changeFilter","payload","extraReducers","fulfilled","id","actions","getIsLoggedIn","isLoggedIn","getUserName","user","getFetchingCurrent","isFetchingCurrentUser","UserMenu","dispatch","useDispatch","useSelector","userMenu","userName","type","btnLogout","onClick","Navigation","to","exact","link","activeClassName","activeLink","AuthNav","authNavigatin","AppBar","header","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","position","autoClose","authSlice","email","action","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4b3b0903.chunk.js","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      toast.success('success ');\n      return data;\n    } catch (error) {\n      toast.error('error');\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials);\n      token.set(data.token);\n      toast.success('success');\n      return data;\n    } catch (error) {\n      toast.error('error');\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post('/users/logout');\n      token.unset();\n      toast.success('success');\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, {getState,rejectWithValue}) => {\n    const state = getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__oVT80\",\"activeLink\":\"AuthNav_activeLink__2kGir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__282vg\",\"activeLink\":\"Navigation_activeLink__3tPE5\"};","import { toast } from 'react-toastify';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    try {\n      const { data } = await axios.get('/contacts');\n      return data;\n    } catch(error) {\n      toast.error('error');\n    }\n  },\n);\n\nexport const addContacts = createAsyncThunk(\n  'contacts/addContacts',\n  async contact => {\n    try {\n      const { data } = await axios.post('/contacts', contact);\n      return data;\n    } catch (error) {\n      toast.error('error');\n    }\n  },\n);\n\nexport const deleteContacts = createAsyncThunk(\n  'contacts/deleteContacts',\n  async contactId=> {\n    try {\n      await axios.delete(`/contacts/${contactId}`);\n      return contactId;\n    } catch (error) {\n      toast.error('error');\n    }\n  },\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenu\":\"UserMenu_userMenu__39TDO\",\"avatar\":\"UserMenu_avatar__3nNbD\",\"userName\":\"UserMenu_userName__D4Z5W\",\"btnLogout\":\"UserMenu_btnLogout__2mFnG\"};","import s from './Container.module.css';\n\nexport default function Container({children}){\n    return <div className={s.container}>{children}</div>;\n}","import { createSlice } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  addContacts,\n  deleteContacts,\n} from './contacts-operations';\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    filter: '',\n  },\n  reducers: {\n    changeFilter: (state, { payload }) => ({ ...state, filter: payload }),\n  },\n  extraReducers: {\n    [fetchContacts.fulfilled]: (state, { payload }) => ({\n      ...state,\n      items: payload,\n    }),\n    [addContacts.fulfilled]: (state, { payload }) => ({\n      ...state,\n      items: [...state.items, payload],\n    }),\n    [deleteContacts.fulfilled]: (state, { payload }) => ({\n      ...state,\n      items: state.items.filter(contact => contact.id !== payload),\n    }),\n  },\n});\n\nexport const { changeFilter } = contactsSlice.actions;\n\nexport default contactsSlice.reducer;\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3YGh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__37Qc0\"};","export const getIsLoggedIn = state => state.auth.isLoggedIn;\nexport const getUserName = state => state.auth.user.name;\nexport const getFetchingCurrent=state=>state.auth.isFetchingCurrentUser;","import { useDispatch, useSelector } from 'react-redux';\nimport { getUserName } from '../../redux/auth/auth-selectors';\nimport { logOut } from '../../redux/auth/auth-operations';\nimport s from './UserMenu.module.css';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(getUserName);\n\n  return (\n    <div className={s.userMenu}>\n      <span className={s.userName}>Wellcome, {name}</span>\n      <button type=\"button\"className={s.btnLogout} onClick={() => dispatch(logOut())}>\n        Log Out\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\n\nimport s from './Navigation.module.css';\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <nav>\n      <NavLink to=\"/\" exact className={s.link} activeClassName={s.activeLink}>\n        Home\n      </NavLink>\n\n      {isLoggedIn && (\n        <>\n          <NavLink\n            to=\"/contacts\"\n            exact\n            className={s.link}\n            activeClassName={s.activeLink}\n          >\n            Contacts\n          </NavLink>\n        </>\n      )}\n    </nav>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './AuthNav.module.css';\n\nexport default function AuthNav() {\n  return (\n    <div className={s.authNavigatin}>\n      <NavLink\n        to=\"/register\"\n        exact\n        className={s.link}\n        activeClassName={s.activeLink}\n      >\n        Registration\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        className={s.link}\n        activeClassName={s.activeLink}\n      >\n        Log In\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport UserMenu from 'components/UserMenu/UserMenu';\nimport s from './AppBar.module.css';\nimport Navigation from 'components/Navigation/Navigation';\nimport AuthNav from 'components/AuthNav/AuthNav';\n\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <header className={s.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}","import { Switch, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, Suspense, lazy } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport Container from 'components/Container/Container';\nimport AppBar from 'components/AppBar/AppBar';\nimport PrivateRoute from 'components/PrivateRoute';\nimport { fetchCurrentUser } from 'redux/auth/auth-operations';\nimport PublicRoute from 'components/PublicRoute';\nimport { getFetchingCurrent } from 'redux/auth/auth-selectors';\nconst HomeView = lazy(() => import('views/HomeView'));\nconst RegisterView = lazy(() => import('views/RegisterView'));\nconst LoginView = lazy(() => import('views/LoginView'));\nconst ContactsView = lazy(() => import('views/ContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(getFetchingCurrent);\n  useEffect(() => dispatch(fetchCurrentUser()), [dispatch]);\n  return (\n    <Container>\n      {isFetchingCurrentUser ? (\n        <h2>Loading</h2>\n      ) : (\n        <>\n          <AppBar />\n          <Suspense fallback={<p>Loading...</p>}>\n            <Switch>\n              {/* <Suspense fallback={<p>Loading...</p>}> */}\n              <PublicRoute exact path=\"/\">\n                <HomeView />\n              </PublicRoute>\n              <PublicRoute path=\"/register\" restricted>\n                <RegisterView />\n              </PublicRoute>\n              <PublicRoute path=\"/login\" redirectTo=\"/contacts\" restricted>\n                <LoginView />\n              </PublicRoute>\n              <PrivateRoute exact path=\"/contacts\" redirectTo=\"/login\">\n                <ContactsView />\n              </PrivateRoute>\n              <Redirect to=\"/\" />\n              {/* </Suspense> */}\n            </Switch>\n          </Suspense>\n\n          <ToastContainer position=\"bottom-left\" autoClose={3000} />\n        </>\n      )}\n    </Container>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport { fetchCurrentUser, logIn, logOut, register } from './auth-operations';\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    \n    [logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [logOut.fulfilled](state, _) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n      },\n    [fetchCurrentUser.pending](state,action) {\n        state.isFetchingCurrentUser = true;\n        state.token = action.payload.token;\n      },\n\n     [fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    }, \n    [fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n\n\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contacts-slicer\";\nimport authReducer from \"./auth/auth-slicer\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport {store, persistor} from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store}> \n    <PersistGate loading={null} persistor={persistor}>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}